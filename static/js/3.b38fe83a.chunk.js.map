{"version":3,"sources":["../node_modules/@iconscout/react-unicons/icons/uil-user-arrows.js","Home/referral/Card.jsx","Home/referral/RefCards.js","Home/referral/index.js"],"names":["UilUserArrows","props","color","size","otherProps","React","createElement","xmlns","width","height","viewBox","fill","d","propTypes","PropTypes","string","oneOfType","number","defaultProps","CompactCard","param","Png","png","div","className","style","background","backGround","boxShadow","title","value","Card","Cards","useContractContext","contract","wrongNetwork","getBnbBalance","fromWei","web3","toWei","useAuthContext","address","chainId","useState","setContractBNB","bnb","power","beans","market","refer","refcount","refreward","rewards","allseedreward","withdrawtimer","walletBalance","setWalletBalance","response","URLSearchParams","useLocation","search","useAxios","fetchContractBNBBalance","config","contractAddress","then","amount","fetchWalletBalance","a","Promise","all","methods","getUserTotalDeposits","call","catch","err","console","error","getUserDividends","getUserTotalWithdrawn","getUserReferrer","getUserTotalReferrals","getcurrentseedincome","getUserReferralBonus","getUserSeedIncome","claimTimer","bnbAmount","powerAmount","beansAmount","marketAmount","referredby","refercount","refrewards","rewardsAmount","seedReward","withdwarTimer","useEffect","interval","refadrs","toString","slice","setWTimerDays","setWTimerHours","setWTimerMinutes","setWTimerSeconds","setCooldownDistance","unixTime","countDownDate","Date","setInterval","wnow","cooldowndistance","parse","wdays","Math","floor","whours","wminutes","wseconds","clearInterval","current","withdrawstartTimer","bnbprice","binancecoin","usd","UilUsersAlt","Referral","ReferralLink"],"mappings":"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","file":"static/js/3.b38fe83a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst UilUserArrows = (props) => {\n  const { color, size, ...otherProps } = props\n  return React.createElement('svg', {\n    xmlns: 'http://www.w3.org/2000/svg',\n    width: size,\n    height: size,\n    viewBox: '0 0 24 24',\n    fill: color,\n    ...otherProps\n  }, React.createElement('path', {\n    d: 'M20.64026,15.77179A3.46849,3.46849,0,0,0,21.5,13.5a3.5,3.5,0,0,0-7,0,3.46849,3.46849,0,0,0,.85974,2.27179A4.98821,4.98821,0,0,0,13,20a1,1,0,0,0,2,0,3,3,0,0,1,6,0,1,1,0,0,0,2,0A4.98821,4.98821,0,0,0,20.64026,15.77179ZM18,15a1.5,1.5,0,1,1,1.5-1.5A1.50164,1.50164,0,0,1,18,15ZM6.79327,7.70734,8.793,9.707A.99989.99989,0,0,0,10.207,8.293L9.91406,8h4.17188l-.293.293A.99989.99989,0,1,0,15.207,9.707l1.9997-1.99969a1.00354,1.00354,0,0,0,0-1.41468L15.207,4.293A.99989.99989,0,0,0,13.793,5.707l.293.293H9.91406l.293-.293A.99989.99989,0,0,0,8.793,4.293L6.79327,6.29266a1.00354,1.00354,0,0,0,0,1.41468Zm1.847,8.06445A3.46849,3.46849,0,0,0,9.5,13.5a3.5,3.5,0,0,0-7,0,3.46849,3.46849,0,0,0,.85974,2.27179A4.98821,4.98821,0,0,0,1,20a1,1,0,0,0,2,0,3,3,0,0,1,6,0,1,1,0,0,0,2,0A4.98821,4.98821,0,0,0,8.64026,15.77179ZM6,15a1.5,1.5,0,1,1,1.5-1.5A1.50164,1.50164,0,0,1,6,15Z'\n  }));\n};\n\nUilUserArrows.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nUilUserArrows.defaultProps = {\n  color: 'currentColor',\n  size: '24',\n};\n\nexport default UilUserArrows;","import React, { useState } from \"react\";\nimport \"./Card.css\";\nimport { motion, AnimateSharedLayout } from \"framer-motion/dist/framer-motion\";\n// import { UilTimes } from \"@iconscout/react-unicons\";\n\n\n// parent Card\n\nconst Card = (props) => {\n  return (\n    <AnimateSharedLayout>\n      \n        <CompactCard param={props} />\n  \n    </AnimateSharedLayout>\n  );\n};\n\n// Compact Card\nfunction CompactCard({param}) {\n  const Png = param.png;\n  return (\n\n    <motion.div\n      className=\"CompactCard\"\n      style={{\n        background: param.backGround,\n        boxShadow: param.boxShadow,\n      }}\n    >\n      \n      <div className=\"detail\">\n          <Png />\n          <span>{param.title}</span>\n          <span>{param.value}</span>\n      </div>\n\n\n    </motion.div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport \"./RefCards.css\";\nimport { UilUsdSquare, UilMoneyWithdrawal} from \"@iconscout/react-unicons\";\nimport { UisAirplay } from '@iconscout/react-unicons-solid';\nimport { UilUsersAlt, UilUserArrows} from '@iconscout/react-unicons'\n// import  cardsData  from \"./Data\";\n\nimport Card from \"./Card\";\n\nimport { useLocation } from \"react-router-dom\";\nimport Web3 from \"web3\";\n\nimport PriceInput from \"../../components/PriceInput\";\nimport { useContractContext } from \"../../providers/ContractProvider\";\nimport { useAuthContext } from \"../../providers/AuthProvider\";\nimport { useEffect, useState } from \"react\";\nimport { config } from \"../../config\";\nimport ButtonClock from \"../components/ButtonClock\";\nimport Address from '../components/address'\nimport useAxios from \"../../components/UseAxios\";\n// import { FaMoneyCheckAlt, FaPiggyBank, FaWallet, FaSlideshare, FaShareAlt, FaFileInvoiceDollar, FaPeopleArrows} from 'react-icons/fa';\n// import { BsSave2Fill, BsFillArrowUpSquareFill, BsPeopleFill } from 'react-icons/bs';\n// import { currencyFormat } from  \"../../components/CurrencyFormat\";\n\n\n// let timeout = null;\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst Cards = () => {\n\n\n  // const depositicon = <FaPiggyBank style={{ marginRight: \"5px\"}} />; \n  // const withdrawicon = <FaMoneyCheckAlt style={{marginRight: \"5px\",  position: 'center'}} />;\n  // const walleticon = <FaWallet style={{ marginRight: \"5px\"}} />;\n  // const tdepositicon = <BsSave2Fill style={{ marginRight: \"5px\"}} />; \n  // const rbonusicon = <FaSlideshare style={{ marginRight: \"5px\"}} />; \n  // const widthrawicon = <BsFillArrowUpSquareFill style={{ marginRight: \"5px\"}} />; \n  // const rebateicon = <FaShareAlt style={{ marginRight: \"5px\"}} />;\n  // const yieldicon = <FaFileInvoiceDollar style={{ marginRight: \"5px\"}} />;\n  // const refnumbericon = <BsPeopleFill style={{ marginRight: \"5px\"}} />; \n  // const refbyicon = <FaPeopleArrows style={{ marginRight: \"5px\"}} />;\n\n  const { contract, wrongNetwork, getBnbBalance, fromWei, toWei, web3 } =\n  useContractContext();\nconst { address, chainId } = useAuthContext();\nconst [contractBNB, setContractBNB] = useState(0);\nconst [walletBalance, setWalletBalance] = useState({\n  bnb: 0,\n  power: 0,\n  beans: 0,\n  market: 0,\n  refer: 0,\n  refcount: 0,\n  refreward: 0,\n  rewards: 0,\n  allseedreward: 0,\n  withdrawtimer: 0,\n});\nconst [bakeBNB, setBakeBNB] = useState(\"\");\nconst [calculatedBeans, setCalculatedBeans] = useState(0);\nconst [loading, setLoading] = useState(false);\nconst query = useQuery();\nconst {response} = useAxios('simple/price?ids=binancecoin&vs_currencies=usd');\n\nconst fetchContractBNBBalance = () => {\n  if (!web3 || wrongNetwork) {\n    setContractBNB(0);\n    return;\n  }\n  getBnbBalance(config.contractAddress).then((amount) => {\n    setContractBNB(fromWei(amount));\n  });\n};\n\nconst fetchWalletBalance = async () => {\n  if (!web3 || wrongNetwork || !address) {\n    setWalletBalance({\n      bnb: 0,\n      power: 0,\n      beans: 0,\n      market: 0,\n      refer: 0,\n      refcount: 0,\n      refreward: 0,\n      rewards: 0,\n      allseedreward: 0,\n      withdrawtimer: 0,\n    });\n    return;\n  }\n\n  try {\n    const [bnbAmount, powerAmount, beansAmount, marketAmount, referredby, refercount, refrewards, rewardsAmount, seedReward, withdwarTimer] = await Promise.all([\n\n      getBnbBalance(address),\n\n      contract.methods\n      .getUserTotalDeposits(address)\n      .call()\n      .catch((err) => {\n        console.error(\"mytotalcompounds\", err);\n        return 0;\n      }),\n\n      contract.methods\n        .getUserDividends(address)\n        .call()\n        .catch((err) => {\n          console.error(\"currentyield\", err);\n          return 0;\n        }),\n\n        contract.methods\n        .getUserTotalWithdrawn(address)\n        .call()\n        .catch((err) => {\n          console.error(\"total withdrawn\", err);\n          return 0;\n        }),\n\n        contract.methods\n        .getUserReferrer(address)\n        .call()\n        .catch((err) => {\n          console.error(\"myreferrer\", err);\n          return 0;\n        }),\n\n        contract.methods\n        .getUserTotalReferrals(address)\n        .call()\n        .catch((err) => {\n          console.error(\"myreferralcount\", err);\n          return 0;\n        }),\n\n        contract.methods\n        .getcurrentseedincome(address)\n        .call()\n        .catch((err) => {\n          console.error(\"pendingseedincome\", err);\n          return 0;\n        }),\n\n      contract.methods\n        .getUserReferralBonus(address)\n        .call()\n        .catch((err) => {\n          console.error(\"referralbonus\", err);\n          return 0;\n        }),\n\n        contract.methods\n        .getUserSeedIncome(address)\n        .call()\n        .catch((err) => {\n          console.error(\"totalseedincomegot\", err);\n          return 0;\n        }),\n\n\n        contract.methods\n        .claimTimer(address)\n        .call()\n        .catch((err) => {\n          console.error(\"withdrawcooldowntimer\", err);\n          return 0;\n        }),\n    ]);\n    setWalletBalance({\n      bnb: fromWei(`${bnbAmount}`),\n      power: fromWei(`${powerAmount}`),\n      beans: fromWei(`${beansAmount}`),\n      market: fromWei(`${marketAmount}`),\n      refer: referredby,\n      refcount: refercount,\n      refreward: fromWei(`${refrewards}`),\n      rewards: fromWei(`${rewardsAmount}`),\n      allseedreward:  fromWei(`${seedReward}`),\n      withdrawtimer: withdwarTimer,\n    });\n  } catch (err) {\n    console.error(err);\n    setWalletBalance({\n      bnb: 0,\n      power: 0,\n      beans: 0,\n      market: 0,\n      refer: 0,\n      refcount: 0,\n      refreward: 0,\n      rewards: 0,\n      allseedreward: 0,\n      withdrawtimer: 0,\n    });\n  }\n};\n\nuseEffect(() => {\n  fetchContractBNBBalance();\n}, [web3, chainId]);\n\nuseEffect(() => {\n  fetchWalletBalance();\n}, [address, web3, chainId]);\n\nconst onUpdateBakeBNB = (value) => {\n  setBakeBNB(value);\n};\n\nconst getRef = () => {\n  const ref = Web3.utils.isAddress(query.get(\"ref\"))\n    ? query.get(\"ref\")\n    : \"0xBF3b8bFAe2B0fBe9d744f02B5d5D9c8b495434eB\";\n  return ref;\n};\n\nconst bake = async () => {\n  setLoading(true);\n\n  const ref = getRef();\n\n  try {\n    await contract.methods.invest(ref).send({\n      from: address,\n      value: toWei(`${bakeBNB}`),\n    });\n  } catch (err) {\n    console.error(err);\n  }\n  fetchWalletBalance();\n  fetchContractBNBBalance();\n  setLoading(false);\n};\n\nconst reBake = async () => {\n  setLoading(true);\n\n  // const ref = getRef();\n\n  try {\n    await contract.methods.reinvest().send({\n      from: address,\n    });\n  } catch (err) {\n    console.error(err);\n  }\n  setLoading(false);\n};\n\nconst eatBeans = async () => {\n  setLoading(true);\n\n  try {\n    await contract.methods.withdraw().send({\n      from: address,\n    });\n  } catch (err) {\n    console.error(err);\n  }\n  fetchWalletBalance();\n  fetchContractBNBBalance();\n  setLoading(false);\n};\n\nconst refaddr = walletBalance.refer;\n\nconst refadrs = refaddr.toString().slice(2);\n\n\n\n\n// timer withdrawal start\nconst [wtimerDays, setWTimerDays] = useState();\nconst [wtimerHours, setWTimerHours] = useState();\nconst [wtimerMinutes, setWTimerMinutes] = useState();\nconst [wtimerSeconds, setWTimerSeconds] = useState();\nconst [cooldowndistance, setCooldownDistance] = useState();\n\n\n\nlet interval;\n\nconst withdrawstartTimer = () => {\n\nconst unixTime = walletBalance.withdrawtimer;\n\nconst countDownDate = new Date(unixTime*1000);\n\ninterval = setInterval(() => {\n  const wnow = new Date();\n\n  const cooldowndistance = Date.parse(countDownDate) - Date.parse(wnow);\n\n  const wdays = Math.floor(cooldowndistance / (24 * 60 * 60 * 1000));\n  const whours = Math.floor(\n    (cooldowndistance % (24 * 60 * 60 * 1000)) / (1000 * 60 * 60)\n  );\n  const wminutes = Math.floor((cooldowndistance % (60 * 60 * 1000)) / (1000 * 60));\n  const wseconds = Math.floor((cooldowndistance % (60 * 1000)) / 1000);\n\n  if (cooldowndistance < 0) {\n    // Stop Timer\n\n    clearInterval(interval.current);\n  } else {\n    // Update Timer\n    setWTimerDays(wdays);\n    setWTimerHours(whours);\n    setWTimerMinutes(wminutes);\n    setWTimerSeconds(wseconds);\n    setCooldownDistance(cooldowndistance);\n   \n  }\n});\n};\n\nuseEffect(() => {\nwithdrawstartTimer();\n});\n\n// withdraw timer end\n\n\n// start of get usd value of BNB \n\nconst walletbnb = walletBalance.bnb;\n// const walletdeposit = walletBalance.power;\n// const walletrefbonus = walletBalance.rewards;\n// const walletrebatereward = walletBalance.refreward;\n// const walletyield = walletBalance.beans;\n// const walletwithdrawn = walletBalance.market;\n\nconst bnbprice = response && response.binancecoin.usd;\n\nconst walletbnbinusd =  walletbnb * bnbprice;\nconst walletdepositusd =  walletBalance.power * bnbprice;\nconst walletrefbonususd =  walletBalance.rewards * bnbprice;\nconst walletrebaterewardusd =  walletBalance.refreward * bnbprice;\nconst walletyieldusd =  walletBalance.beans * bnbprice;\nconst walletwithdrawnusd =  walletBalance.market * bnbprice;\n\n// const inputbnbinusd = bakeBNB * bnbprice;\n\n// end of get usd value of coin \n\n// start of get total reward to withdraw \n\n// const totalrewardtowithdraw =  walletrefbonususd + walletrebaterewardusd + walletyieldusd;\n\n\n// end of get total reward to withdraw \n\n\n\n  return (\n    <div className=\"Cards\">\n     \n        {/* <div className=\"parentContainer\">\n              <Card\n              backGround = \"linear-gradient(180deg, #AF1A25 0%, #AF1A25 100%)\"\n\n              boxShadow = \"0px 10px 20px 0px #e0c6f5\"\n    \n              title= \"Ref Bonus\"\n              \n              value= {walletBalance.rewards}\n\n              usd= {walletrefbonususd.toFixed(2)}\n\n              png= {UilUsdSquare}\n              />\n        </div> */}\n\n        <div className=\"parentContainer\">\n              <Card\n              backGround = \"linear-gradient(180deg, #AF1A25 0%, #AF1A25 100%)\"\n\n              boxShadow = \"0px 10px 20px 0px #e0c6f5\"\n    \n              title= \"Total Referral\"\n              \n              value= {walletBalance.refcount}\n\n              png= {UilUsersAlt}\n            />\n        </div>\n\n\n\n        <div className=\"parentContainer\">\n              <Card\n              backGround = \"linear-gradient(180deg, #AF1A25 0%, #AF1A25 100%)\"\n\n              boxShadow = \"0px 10px 20px 0px #e0c6f5\"\n    \n              title= \"Referred By:\"\n              \n              value= <Address  a= {refadrs} />\n\n              png= {UilUserArrows}\n            />\n        </div>\n\n        \n    </div>\n  );\n};\n\nexport default Cards;\n","import React from \"react\";\nimport RefCards from \"./RefCards\";\nimport ReferralLink from \"../components/ReferralLink\";\nimport { useAuthContext } from \"../../providers/AuthProvider\";\n\nimport \"./Page.css\";\n\n\n\nconst Referral = () => {\n    const { address } = useAuthContext();\n\n  \n\n\n  return (\n    <div className=\"MainDash\">\n      <h1  style={{color: \"#AF1A25\"}}>Referral</h1>\n      {/* <Connect/> */}\n      <RefCards />\n      <ReferralLink address={address}/>\n      {/* <OtherInfo/> */}\n      {/* <Table /> */}\n    </div>\n  );\n};\n\nexport default Referral;\n"],"sourceRoot":""}