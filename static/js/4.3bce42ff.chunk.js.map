{"version":3,"sources":["Home/cards/Cards.jsx","Home/components/NutritionFacts.js","Home/cards/index.js"],"names":["Cards","useContractContext","contract","wrongNetwork","getBnbBalance","fromWei","web3","toWei","useAuthContext","address","chainId","useState","setContractBNB","bnb","power","beans","market","refer","refcount","refreward","rewards","allseedreward","withdrawtimer","walletBalance","setWalletBalance","response","URLSearchParams","useLocation","search","useAxios","fetchContractBNBBalance","config","contractAddress","then","amount","fetchWalletBalance","a","Promise","all","methods","getUserTotalDeposits","call","catch","err","console","error","getUserDividends","getUserTotalWithdrawn","getUserReferrer","getUserTotalReferrals","getcurrentseedincome","getUserReferralBonus","getUserSeedIncome","claimTimer","bnbAmount","powerAmount","beansAmount","marketAmount","referredby","refercount","refrewards","rewardsAmount","seedReward","withdwarTimer","useEffect","toString","slice","interval","setWTimerDays","setWTimerHours","setWTimerMinutes","setWTimerSeconds","setCooldownDistance","unixTime","countDownDate","Date","setInterval","wnow","cooldowndistance","parse","wdays","Math","floor","whours","wminutes","wseconds","clearInterval","current","withdrawstartTimer","bnbprice","binancecoin","usd","walletrefbonususd","walletrebaterewardusd","walletyieldusd","className","Card","backGround","boxShadow","title","value","toFixed","png","UilUsdSquare","CardWrapper","styled","background","marginBottom","nutritionFacts","label","NutritionFacts","CardContent","Typography","style","color","variant","borderBottom","paddingBottom","Box","paddingTop","map","f","Grid","container","justifyContent","gutterBottom","Home"],"mappings":"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","file":"static/js/4.3bce42ff.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Cards.css\";\nimport { UilUsdSquare, UilMoneyWithdrawal } from \"@iconscout/react-unicons\";\n// import  cardsData  from \"./Data\";\n\nimport Card from \"./Card\";\n\nimport { useLocation } from \"react-router-dom\";\nimport Web3 from \"web3\";\n\nimport PriceInput from \"../../components/PriceInput\";\nimport { useContractContext } from \"../../providers/ContractProvider\";\nimport { useAuthContext } from \"../../providers/AuthProvider\";\nimport { useEffect, useState } from \"react\";\nimport { config } from \"../../config\";\nimport ButtonClock from \"../components/ButtonClock\";\nimport Address from '../components/address'\n// import { FaMoneyCheckAlt, FaPiggyBank, FaWallet, FaSlideshare, FaShareAlt, FaFileInvoiceDollar, FaPeopleArrows} from 'react-icons/fa';\n// import { BsSave2Fill, BsFillArrowUpSquareFill, BsPeopleFill } from 'react-icons/bs';\nimport useAxios from \"../../components/UseAxios\";\n// import { currencyFormat } from  \"../../components/CurrencyFormat\";\n\n\n// let timeout = null;\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst Cards = () => {\n\n\n//   const depositicon = <FaPiggyBank style={{ marginRight: \"5px\"}} />; \n//   const withdrawicon = <FaMoneyCheckAlt style={{marginRight: \"5px\",  position: 'center'}} />;\n//   const walleticon = <FaWallet style={{ marginRight: \"5px\"}} />;\n//   const tdepositicon = <BsSave2Fill style={{ marginRight: \"5px\"}} />; \n//   const rbonusicon = <FaSlideshare style={{ marginRight: \"5px\"}} />; \n//   const widthrawicon = <BsFillArrowUpSquareFill style={{ marginRight: \"5px\"}} />; \n//   const rebateicon = <FaShareAlt style={{ marginRight: \"5px\"}} />;\n//   const yieldicon = <FaFileInvoiceDollar style={{ marginRight: \"5px\"}} />;\n//   const refnumbericon = <BsPeopleFill style={{ marginRight: \"5px\"}} />; \n//   const refbyicon = <FaPeopleArrows style={{ marginRight: \"5px\"}} />;\n\n  const { contract, wrongNetwork, getBnbBalance, fromWei, toWei, web3 } =\n  useContractContext();\nconst { address, chainId } = useAuthContext();\nconst [contractBNB, setContractBNB] = useState(0);\nconst [walletBalance, setWalletBalance] = useState({\n  bnb: 0,\n  power: 0,\n  beans: 0,\n  market: 0,\n  refer: 0,\n  refcount: 0,\n  refreward: 0,\n  rewards: 0,\n  allseedreward: 0,\n  withdrawtimer: 0,\n});\nconst [bakeBNB, setBakeBNB] = useState(\"\");\nconst [calculatedBeans, setCalculatedBeans] = useState(0);\nconst [loading, setLoading] = useState(false);\nconst query = useQuery();\nconst {response} = useAxios('simple/price?ids=binancecoin&vs_currencies=usd');\n\nconst fetchContractBNBBalance = () => {\n  if (!web3 || wrongNetwork) {\n    setContractBNB(0);\n    return;\n  }\n  getBnbBalance(config.contractAddress).then((amount) => {\n    setContractBNB(fromWei(amount));\n  });\n};\n\nconst fetchWalletBalance = async () => {\n  if (!web3 || wrongNetwork || !address) {\n    setWalletBalance({\n      bnb: 0,\n      power: 0,\n      beans: 0,\n      market: 0,\n      refer: 0,\n      refcount: 0,\n      refreward: 0,\n      rewards: 0,\n      allseedreward: 0,\n      withdrawtimer: 0,\n    });\n    return;\n  }\n\n  try {\n    const [bnbAmount, powerAmount, beansAmount, marketAmount, referredby, refercount, refrewards, rewardsAmount, seedReward, withdwarTimer] = await Promise.all([\n\n      getBnbBalance(address),\n\n      contract.methods\n      .getUserTotalDeposits(address)\n      .call()\n      .catch((err) => {\n        console.error(\"mytotalcompounds\", err);\n        return 0;\n      }),\n\n      contract.methods\n        .getUserDividends(address)\n        .call()\n        .catch((err) => {\n          console.error(\"currentyield\", err);\n          return 0;\n        }),\n\n        contract.methods\n        .getUserTotalWithdrawn(address)\n        .call()\n        .catch((err) => {\n          console.error(\"total withdrawn\", err);\n          return 0;\n        }),\n\n        contract.methods\n        .getUserReferrer(address)\n        .call()\n        .catch((err) => {\n          console.error(\"myreferrer\", err);\n          return 0;\n        }),\n\n        contract.methods\n        .getUserTotalReferrals(address)\n        .call()\n        .catch((err) => {\n          console.error(\"myreferralcount\", err);\n          return 0;\n        }),\n\n        contract.methods\n        .getcurrentseedincome(address)\n        .call()\n        .catch((err) => {\n          console.error(\"pendingseedincome\", err);\n          return 0;\n        }),\n\n      contract.methods\n        .getUserReferralBonus(address)\n        .call()\n        .catch((err) => {\n          console.error(\"referralbonus\", err);\n          return 0;\n        }),\n\n        contract.methods\n        .getUserSeedIncome(address)\n        .call()\n        .catch((err) => {\n          console.error(\"totalseedincomegot\", err);\n          return 0;\n        }),\n\n\n        contract.methods\n        .claimTimer(address)\n        .call()\n        .catch((err) => {\n          console.error(\"withdrawcooldowntimer\", err);\n          return 0;\n        }),\n    ]);\n    setWalletBalance({\n      bnb: fromWei(`${bnbAmount}`),\n      power: fromWei(`${powerAmount}`),\n      beans: fromWei(`${beansAmount}`),\n      market: fromWei(`${marketAmount}`),\n      refer: referredby,\n      refcount: refercount,\n      refreward: fromWei(`${refrewards}`),\n      rewards: fromWei(`${rewardsAmount}`),\n      allseedreward:  fromWei(`${seedReward}`),\n      withdrawtimer: withdwarTimer,\n    });\n  } catch (err) {\n    console.error(err);\n    setWalletBalance({\n      bnb: 0,\n      power: 0,\n      beans: 0,\n      market: 0,\n      refer: 0,\n      refcount: 0,\n      refreward: 0,\n      rewards: 0,\n      allseedreward: 0,\n      withdrawtimer: 0,\n    });\n  }\n};\n\nuseEffect(() => {\n  fetchContractBNBBalance();\n}, [web3, chainId]);\n\nuseEffect(() => {\n  fetchWalletBalance();\n}, [address, web3, chainId]);\n\nconst onUpdateBakeBNB = (value) => {\n  setBakeBNB(value);\n};\n\nconst getRef = () => {\n  const ref = Web3.utils.isAddress(query.get(\"ref\"))\n    ? query.get(\"ref\")\n    : \"0xBF3b8bFAe2B0fBe9d744f02B5d5D9c8b495434eB\";\n  return ref;\n};\n\nconst bake = async () => {\n  setLoading(true);\n\n  const ref = getRef();\n\n  try {\n    await contract.methods.invest(ref).send({\n      from: address,\n      value: toWei(`${bakeBNB}`),\n    });\n  } catch (err) {\n    console.error(err);\n  }\n  fetchWalletBalance();\n  fetchContractBNBBalance();\n  setLoading(false);\n};\n\nconst reBake = async () => {\n  setLoading(true);\n\n  // const ref = getRef();\n\n  try {\n    await contract.methods.reinvest().send({\n      from: address,\n    });\n  } catch (err) {\n    console.error(err);\n  }\n  setLoading(false);\n};\n\nconst eatBeans = async () => {\n  setLoading(true);\n\n  try {\n    await contract.methods.withdraw().send({\n      from: address,\n    });\n  } catch (err) {\n    console.error(err);\n  }\n  fetchWalletBalance();\n  fetchContractBNBBalance();\n  setLoading(false);\n};\n\nconst refaddr = walletBalance.refer;\n\nconst refadrs = refaddr.toString().slice(2);\n\n\n\n\n// timer withdrawal start\nconst [wtimerDays, setWTimerDays] = useState();\nconst [wtimerHours, setWTimerHours] = useState();\nconst [wtimerMinutes, setWTimerMinutes] = useState();\nconst [wtimerSeconds, setWTimerSeconds] = useState();\nconst [cooldowndistance, setCooldownDistance] = useState();\n\n\n\nlet interval;\n\nconst withdrawstartTimer = () => {\n\nconst unixTime = walletBalance.withdrawtimer;\n\nconst countDownDate = new Date(unixTime*1000);\n\ninterval = setInterval(() => {\n  const wnow = new Date();\n\n  const cooldowndistance = Date.parse(countDownDate) - Date.parse(wnow);\n\n  const wdays = Math.floor(cooldowndistance / (24 * 60 * 60 * 1000));\n  const whours = Math.floor(\n    (cooldowndistance % (24 * 60 * 60 * 1000)) / (1000 * 60 * 60)\n  );\n  const wminutes = Math.floor((cooldowndistance % (60 * 60 * 1000)) / (1000 * 60));\n  const wseconds = Math.floor((cooldowndistance % (60 * 1000)) / 1000);\n\n  if (cooldowndistance < 0) {\n    // Stop Timer\n\n    clearInterval(interval.current);\n  } else {\n    // Update Timer\n    setWTimerDays(wdays);\n    setWTimerHours(whours);\n    setWTimerMinutes(wminutes);\n    setWTimerSeconds(wseconds);\n    setCooldownDistance(cooldowndistance);\n   \n  }\n});\n};\n\nuseEffect(() => {\nwithdrawstartTimer();\n});\n\n// withdraw timer end\n\n\n// start of get usd value of BNB \n\nconst walletbnb = walletBalance.bnb;\n// const walletdeposit = walletBalance.power;\n// const walletrefbonus = walletBalance.rewards;\n// const walletrebatereward = walletBalance.refreward;\n// const walletyield = walletBalance.beans;\n// const walletwithdrawn = walletBalance.market;\n\nconst bnbprice = response && response.binancecoin.usd;\n\nconst walletbnbinusd =  walletbnb * bnbprice;\nconst walletdepositusd =  walletBalance.power * bnbprice;\nconst walletrefbonususd =  walletBalance.rewards * bnbprice;\nconst walletrebaterewardusd =  walletBalance.refreward * bnbprice;\nconst walletyieldusd =  walletBalance.beans * bnbprice;\nconst walletwithdrawnusd =  walletBalance.market * bnbprice;\n\n// const inputbnbinusd = bakeBNB * bnbprice;\n\n// end of get usd value of coin \n\n// start of get total reward to withdraw \n\n// const totalrewardtowithdraw =  walletrefbonususd + walletrebaterewardusd + walletyieldusd;\n\n\n// end of get total reward to withdraw \n\n\n\n  return (\n    <div className=\"Cards\">\n\n        <div className=\"parentContainer\">\n              <Card\n              backGround = \"linear-gradient(180deg, #AF1A25 0%, #AF1A25 100%)\"\n\n              boxShadow = \"0px 10px 20px 0px #e0c6f5\"\n    \n              title= \"Daily Yield\"\n              \n              value= {walletBalance.beans}\n\n              usd= {walletyieldusd.toFixed(2)}\n\n              png= {UilUsdSquare}\n            />\n        </div>\n     \n        <div className=\"parentContainer\">\n              <Card\n              backGround = \"linear-gradient(180deg, #AF1A25 0%, #AF1A25 100%)\"\n\n              boxShadow = \"0px 10px 20px 0px #e0c6f5\"\n    \n              title= \"Ref Reward\"\n              \n              value= {walletBalance.rewards}\n\n              usd= {walletrefbonususd.toFixed(2)}\n\n              png= {UilUsdSquare}\n              />\n        </div>\n\n        <div className=\"parentContainer\">\n              <Card\n              backGround = \"linear-gradient(180deg, #AF1A25 0%, #AF1A25 100%)\"\n\n              boxShadow = \"0px 10px 20px 0px #e0c6f5\"\n    \n              title= \"Rebates Reward\"\n              \n              value= {walletBalance.refreward}\n\n              usd= { walletrebaterewardusd.toFixed(2)}\n\n              png= {UilUsdSquare}\n            />\n        </div>\n        \n    </div>\n  );\n};\n\nexport default Cards;\n","import CardContent from \"@mui/material/CardContent\";\nimport Card from \"@mui/material/Card\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { styled } from \"@mui/system\";\n\nconst CardWrapper = styled(Card)({\n  background: \"#FECA70\",\n  marginBottom: 24,\n});\n\nconst nutritionFacts = [\n  {\n    label: \"Daily Yield\",\n    value: 1.5,\n  },\n  {\n    label: \"Indirect Reward\",\n    value: 6.75,\n  },\n  {\n    label: \"Direct Reward\",\n    value: 5,\n  },\n  {\n    label: \"Rebates Bonus\",\n    value: 16,\n  },\n];\n\nexport default function NutritionFacts() {\n  return (\n    <CardWrapper >\n      <CardContent >\n        <Typography style={{color: \"#AF1A25\"}} variant=\"h5\" borderBottom=\"6px solid\" paddingBottom={1}>\n        Minimum Deposit: 0.2 BNB\n        </Typography>\n        <Box  paddingTop={2}>\n          {nutritionFacts.map((f) => (\n            <Grid container key={f.label} justifyContent=\"space-between\">\n              <Typography style={{color: \"#AF1A25\"}} variant=\"body1\" gutterBottom>\n                {f.label}\n              </Typography>\n              <Typography style={{color: \"#AF1A25\"}} gutterBottom>{f.value}%</Typography>\n            </Grid>\n          ))}\n        </Box>\n      </CardContent>\n    </CardWrapper>\n  );\n}\n","import React from \"react\";\nimport Cards from \"./Cards\";\nimport NutritionFacts from '../components/NutritionFacts'\n// import Table from \"../../components/Table/Table\";\n// import OtherInfo from \"../components/OtherInfo\";\nimport \"./Page.css\";\n// import Connect from \"../components/Connect\";\n// import { useAuthContext } from \"../../providers/AuthProvider\";\n\n\nconst Home = () => {\n    // const { address } = useAuthContext();\n  return (\n    <div className=\"MainDash\">\n      <h1  style={{color: \"#AF1A25\"}}>Dashboard</h1>\n      {/* <Connect/> */}\n      <Cards />\n      <NutritionFacts/>\n      {/* <OtherInfo/> */}\n      {/* <Table /> */}\n    </div>\n  );\n};\n\nexport default Home;\n"],"sourceRoot":""}